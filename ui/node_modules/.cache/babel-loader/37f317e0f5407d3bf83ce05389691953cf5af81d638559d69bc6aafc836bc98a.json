{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\shadow\\\\Documents\\\\cursor\\\\aigm\\\\ui\\\\src\\\\components\\\\ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGameState } from '../contexts/GameStateContext';\nimport Message from './Message';\nimport Button from './Button';\nimport Input from './Input';\n\n// Message types based on our color system\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const {\n    gameState,\n    addGameEvent\n  } = useGameState();\n  const [messages, setMessages] = useState([{\n    id: 'welcome',\n    type: 'admin-ai',\n    content: `Welcome to \"${gameState.sessionName}\"! I'll be your AI Game Master today. What would you like to do?`,\n    timestamp: Date.now(),\n    sender: 'AI GM'\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [messageType, setMessageType] = useState('ooc-player');\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Group messages by date for better visual organization\n  const groupedMessages = messages.reduce((groups, message) => {\n    const date = new Date(message.timestamp).toLocaleDateString();\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n    groups[date].push(message);\n    return groups;\n  }, {});\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!inputValue.trim()) return;\n\n    // Create player message\n    const newPlayerMessage = {\n      id: `msg_${Date.now()}`,\n      type: messageType,\n      content: inputValue,\n      timestamp: Date.now(),\n      sender: 'You'\n    };\n\n    // Add player message to state\n    setMessages(prev => [...prev, newPlayerMessage]);\n\n    // Clear input\n    setInputValue('');\n\n    // Log as game event if it's in-character\n    if (messageType === 'ic-player') {\n      addGameEvent({\n        type: 'player_action',\n        description: inputValue\n      });\n    }\n\n    // Simulate AI response (in a real app, this would call the n8n API)\n    setTimeout(() => {\n      let responseType = 'ooc-ai';\n\n      // Match response context to input context\n      if (messageType === 'ic-player') {\n        responseType = 'ic-ai';\n      } else if (messageType === 'ooc-player') {\n        responseType = 'ooc-ai';\n      } else if (messageType === 'admin-user') {\n        responseType = 'admin-ai';\n      }\n      const aiResponse = {\n        id: `msg_${Date.now()}`,\n        type: responseType,\n        content: getSimulatedResponse(inputValue, responseType),\n        timestamp: Date.now(),\n        sender: 'AI GM'\n      };\n      setMessages(prev => [...prev, aiResponse]);\n\n      // Log as game event if it's in-character narration\n      if (responseType === 'ic-ai') {\n        addGameEvent({\n          type: 'game_master_narration',\n          description: aiResponse.content.substring(0, 100) + (aiResponse.content.length > 100 ? '...' : '')\n        });\n      }\n    }, 1000);\n  };\n\n  // Simple simulated response generator\n  const getSimulatedResponse = (input, responseType) => {\n    if (responseType === 'admin-ai') {\n      return \"I understand you're making a system request. Let me handle that for you.\";\n    } else if (responseType === 'ooc-ai') {\n      return \"That's a good meta-game question. As the Game Master, I'd suggest considering the current narrative context.\";\n    } else {\n      // ic-ai type - narrative response\n      return \"The ancient forest grows silent as you speak. Distant creatures pause their activities, as if listening to your words. What will you do next?\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [Object.entries(groupedMessages).map(([date, dateMessages]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-separator\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), dateMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            type: message.type,\n            content: message.content,\n            timestamp: message.timestamp,\n            sender: message.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this))]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-type-selector\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: messageType === 'ic-player' ? 'primary' : 'secondary',\n          size: \"small\",\n          onClick: () => setMessageType('ic-player'),\n          title: \"In-Character: What your character says or does\",\n          className: `type-button ${messageType === 'ic-player' ? 'active' : ''}`,\n          text: \"IC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: messageType === 'ooc-player' ? 'primary' : 'secondary',\n          size: \"small\",\n          onClick: () => setMessageType('ooc-player'),\n          title: \"Out-of-Character: Meta-game discussions\",\n          className: `type-button ${messageType === 'ooc-player' ? 'active' : ''}`,\n          text: \"OOC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: messageType === 'admin-user' ? 'primary' : 'secondary',\n          size: \"small\",\n          onClick: () => setMessageType('admin-user'),\n          title: \"Admin: System commands and settings\",\n          className: `type-button ${messageType === 'admin-user' ? 'active' : ''}`,\n          text: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"chat-input-form\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          placeholder: \"Type your message...\",\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"send-button\",\n          text: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"UWyi1jqmJv9owYHJ8Lweb1rtueA=\", false, function () {\n  return [useGameState];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useGameState","Message","Button","Input","jsxDEV","_jsxDEV","ChatInterface","_s","gameState","addGameEvent","messages","setMessages","id","type","content","sessionName","timestamp","Date","now","sender","inputValue","setInputValue","messageType","setMessageType","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","groupedMessages","reduce","groups","message","date","toLocaleDateString","push","handleSendMessage","e","preventDefault","trim","newPlayerMessage","prev","description","setTimeout","responseType","aiResponse","getSimulatedResponse","substring","length","input","className","children","Object","entries","map","dateMessages","fileName","_jsxFileName","lineNumber","columnNumber","ref","variant","size","onClick","title","text","onSubmit","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/users/shadow/Documents/cursor/aigm/ui/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useGameState } from '../contexts/GameStateContext';\nimport Message from './Message';\nimport Button from './Button';\nimport Input from './Input';\n\n// Message types based on our color system\nexport type MessageType = \n  | 'admin-user' \n  | 'admin-ai' \n  | 'ooc-player' \n  | 'ooc-ai' \n  | 'ic-player' \n  | 'ic-ai';\n\ninterface ChatMessage {\n  id: string;\n  type: MessageType;\n  content: string;\n  timestamp: number;\n  sender: string;\n}\n\nconst ChatInterface: React.FC = () => {\n  const { gameState, addGameEvent } = useGameState();\n  const [messages, setMessages] = useState<ChatMessage[]>([\n    {\n      id: 'welcome',\n      type: 'admin-ai',\n      content: `Welcome to \"${gameState.sessionName}\"! I'll be your AI Game Master today. What would you like to do?`,\n      timestamp: Date.now(),\n      sender: 'AI GM'\n    }\n  ]);\n  const [inputValue, setInputValue] = useState('');\n  const [messageType, setMessageType] = useState<MessageType>('ooc-player');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n  \n  // Group messages by date for better visual organization\n  const groupedMessages = messages.reduce<Record<string, ChatMessage[]>>((groups, message) => {\n    const date = new Date(message.timestamp).toLocaleDateString();\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n    groups[date].push(message);\n    return groups;\n  }, {});\n\n  const handleSendMessage = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!inputValue.trim()) return;\n    \n    // Create player message\n    const newPlayerMessage: ChatMessage = {\n      id: `msg_${Date.now()}`,\n      type: messageType,\n      content: inputValue,\n      timestamp: Date.now(),\n      sender: 'You'\n    };\n    \n    // Add player message to state\n    setMessages(prev => [...prev, newPlayerMessage]);\n    \n    // Clear input\n    setInputValue('');\n    \n    // Log as game event if it's in-character\n    if (messageType === 'ic-player') {\n      addGameEvent({\n        type: 'player_action',\n        description: inputValue\n      });\n    }\n    \n    // Simulate AI response (in a real app, this would call the n8n API)\n    setTimeout(() => {\n      let responseType: MessageType = 'ooc-ai';\n      \n      // Match response context to input context\n      if (messageType === 'ic-player') {\n        responseType = 'ic-ai';\n      } else if (messageType === 'ooc-player') {\n        responseType = 'ooc-ai';\n      } else if (messageType === 'admin-user') {\n        responseType = 'admin-ai';\n      }\n      \n      const aiResponse: ChatMessage = {\n        id: `msg_${Date.now()}`,\n        type: responseType,\n        content: getSimulatedResponse(inputValue, responseType),\n        timestamp: Date.now(),\n        sender: 'AI GM'\n      };\n      \n      setMessages(prev => [...prev, aiResponse]);\n      \n      // Log as game event if it's in-character narration\n      if (responseType === 'ic-ai') {\n        addGameEvent({\n          type: 'game_master_narration',\n          description: aiResponse.content.substring(0, 100) + (aiResponse.content.length > 100 ? '...' : '')\n        });\n      }\n    }, 1000);\n  };\n  \n  // Simple simulated response generator\n  const getSimulatedResponse = (input: string, responseType: MessageType): string => {\n    if (responseType === 'admin-ai') {\n      return \"I understand you're making a system request. Let me handle that for you.\";\n    } else if (responseType === 'ooc-ai') {\n      return \"That's a good meta-game question. As the Game Master, I'd suggest considering the current narrative context.\";\n    } else {\n      // ic-ai type - narrative response\n      return \"The ancient forest grows silent as you speak. Distant creatures pause their activities, as if listening to your words. What will you do next?\";\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-messages\">\n        {Object.entries(groupedMessages).map(([date, dateMessages]) => (\n          <div key={date} className=\"message-group\">\n            <div className=\"date-separator\">\n              <span>{date}</span>\n            </div>\n            {dateMessages.map((message) => (\n              <div key={message.id} className=\"message-wrapper\">\n                <Message\n                  type={message.type}\n                  content={message.content}\n                  timestamp={message.timestamp}\n                  sender={message.sender}\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      <div className=\"chat-input-container\">\n        <div className=\"message-type-selector\">\n          <Button \n            variant={messageType === 'ic-player' ? 'primary' : 'secondary'}\n            size=\"small\"\n            onClick={() => setMessageType('ic-player')}\n            title=\"In-Character: What your character says or does\"\n            className={`type-button ${messageType === 'ic-player' ? 'active' : ''}`}\n            text=\"IC\"\n          />\n          <Button \n            variant={messageType === 'ooc-player' ? 'primary' : 'secondary'}\n            size=\"small\"\n            onClick={() => setMessageType('ooc-player')}\n            title=\"Out-of-Character: Meta-game discussions\"\n            className={`type-button ${messageType === 'ooc-player' ? 'active' : ''}`}\n            text=\"OOC\"\n          />\n          <Button \n            variant={messageType === 'admin-user' ? 'primary' : 'secondary'}\n            size=\"small\"\n            onClick={() => setMessageType('admin-user')}\n            title=\"Admin: System commands and settings\"\n            className={`type-button ${messageType === 'admin-user' ? 'active' : ''}`}\n            text=\"Admin\"\n          />\n        </div>\n        \n        <form onSubmit={handleSendMessage} className=\"chat-input-form\">\n          <Input\n            type=\"text\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            placeholder=\"Type your message...\"\n            className=\"chat-input\"\n          />\n          <Button \n            type=\"submit\" \n            variant=\"primary\"\n            className=\"send-button\"\n            text=\"Send\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}