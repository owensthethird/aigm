{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\shadow\\\\Documents\\\\cursor\\\\aigm\\\\ui\\\\src\\\\components\\\\ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGameState } from '../contexts/GameStateContext';\n\n// Message types based on our color system\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const {\n    gameState,\n    addGameEvent\n  } = useGameState();\n  const [messages, setMessages] = useState([{\n    id: 'welcome',\n    type: 'admin-ai',\n    content: `Welcome to \"${gameState.sessionName}\"! I'll be your AI Game Master today. What would you like to do?`,\n    timestamp: Date.now(),\n    sender: 'AI GM'\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [messageType, setMessageType] = useState('ooc-player');\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!inputValue.trim()) return;\n\n    // Create player message\n    const newPlayerMessage = {\n      id: `msg_${Date.now()}`,\n      type: messageType,\n      content: inputValue,\n      timestamp: Date.now(),\n      sender: 'You'\n    };\n\n    // Add player message to state\n    setMessages(prev => [...prev, newPlayerMessage]);\n\n    // Clear input\n    setInputValue('');\n\n    // Log as game event if it's in-character\n    if (messageType === 'ic-player') {\n      addGameEvent({\n        type: 'player_action',\n        description: inputValue\n      });\n    }\n\n    // Simulate AI response (in a real app, this would call the n8n API)\n    setTimeout(() => {\n      let responseType = 'ooc-ai';\n\n      // Match response context to input context\n      if (messageType === 'ic-player') {\n        responseType = 'ic-ai';\n      } else if (messageType === 'ooc-player') {\n        responseType = 'ooc-ai';\n      } else if (messageType === 'admin-user') {\n        responseType = 'admin-ai';\n      }\n      const aiResponse = {\n        id: `msg_${Date.now()}`,\n        type: responseType,\n        content: getSimulatedResponse(inputValue, responseType),\n        timestamp: Date.now(),\n        sender: 'AI GM'\n      };\n      setMessages(prev => [...prev, aiResponse]);\n\n      // Log as game event if it's in-character narration\n      if (responseType === 'ic-ai') {\n        addGameEvent({\n          type: 'game_master_narration',\n          description: aiResponse.content.substring(0, 100) + (aiResponse.content.length > 100 ? '...' : '')\n        });\n      }\n    }, 1000);\n  };\n\n  // Simple simulated response generator\n  const getSimulatedResponse = (input, responseType) => {\n    if (responseType === 'admin-ai') {\n      return \"I understand you're making a system request. Let me handle that for you.\";\n    } else if (responseType === 'ooc-ai') {\n      return \"That's a good meta-game question. As the Game Master, I'd suggest considering the current narrative context.\";\n    } else {\n      // ic-ai type - narrative response\n      return \"The ancient forest grows silent as you speak. Distant creatures pause their activities, as if listening to your words. What will you do next?\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}-message fade-in`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"sender\",\n            children: message.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"timestamp\",\n            children: new Date(message.timestamp).toLocaleTimeString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-type-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `type-button ${messageType === 'ic-player' ? 'active' : ''}`,\n          onClick: () => setMessageType('ic-player'),\n          title: \"In-Character: What your character says or does\",\n          children: \"IC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `type-button ${messageType === 'ooc-player' ? 'active' : ''}`,\n          onClick: () => setMessageType('ooc-player'),\n          title: \"Out-of-Character: Meta-game discussions\",\n          children: \"OOC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `type-button ${messageType === 'admin-user' ? 'active' : ''}`,\n          onClick: () => setMessageType('admin-user'),\n          title: \"Admin: System commands and settings\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"chat-input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"chat-input\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          placeholder: messageType === 'ic-player' ? \"Describe what your character says or does...\" : messageType === 'ooc-player' ? \"Ask a question about the game or rules...\" : \"Enter a system command...\",\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSendMessage(e);\n            }\n          },\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"UWyi1jqmJv9owYHJ8Lweb1rtueA=\", false, function () {\n  return [useGameState];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useGameState","jsxDEV","_jsxDEV","ChatInterface","_s","gameState","addGameEvent","messages","setMessages","id","type","content","sessionName","timestamp","Date","now","sender","inputValue","setInputValue","messageType","setMessageType","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","newPlayerMessage","prev","description","setTimeout","responseType","aiResponse","getSimulatedResponse","substring","length","input","className","children","map","message","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","ref","onClick","title","onSubmit","value","onChange","target","placeholder","onKeyDown","key","shiftKey","rows","_c","$RefreshReg$"],"sources":["C:/users/shadow/Documents/cursor/aigm/ui/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useGameState } from '../contexts/GameStateContext';\n\n// Message types based on our color system\nexport type MessageType = \n  | 'admin-user' \n  | 'admin-ai' \n  | 'ooc-player' \n  | 'ooc-ai' \n  | 'ic-player' \n  | 'ic-ai';\n\ninterface ChatMessage {\n  id: string;\n  type: MessageType;\n  content: string;\n  timestamp: number;\n  sender: string;\n}\n\nconst ChatInterface: React.FC = () => {\n  const { gameState, addGameEvent } = useGameState();\n  const [messages, setMessages] = useState<ChatMessage[]>([\n    {\n      id: 'welcome',\n      type: 'admin-ai',\n      content: `Welcome to \"${gameState.sessionName}\"! I'll be your AI Game Master today. What would you like to do?`,\n      timestamp: Date.now(),\n      sender: 'AI GM'\n    }\n  ]);\n  const [inputValue, setInputValue] = useState('');\n  const [messageType, setMessageType] = useState<MessageType>('ooc-player');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const handleSendMessage = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!inputValue.trim()) return;\n    \n    // Create player message\n    const newPlayerMessage: ChatMessage = {\n      id: `msg_${Date.now()}`,\n      type: messageType,\n      content: inputValue,\n      timestamp: Date.now(),\n      sender: 'You'\n    };\n    \n    // Add player message to state\n    setMessages(prev => [...prev, newPlayerMessage]);\n    \n    // Clear input\n    setInputValue('');\n    \n    // Log as game event if it's in-character\n    if (messageType === 'ic-player') {\n      addGameEvent({\n        type: 'player_action',\n        description: inputValue\n      });\n    }\n    \n    // Simulate AI response (in a real app, this would call the n8n API)\n    setTimeout(() => {\n      let responseType: MessageType = 'ooc-ai';\n      \n      // Match response context to input context\n      if (messageType === 'ic-player') {\n        responseType = 'ic-ai';\n      } else if (messageType === 'ooc-player') {\n        responseType = 'ooc-ai';\n      } else if (messageType === 'admin-user') {\n        responseType = 'admin-ai';\n      }\n      \n      const aiResponse: ChatMessage = {\n        id: `msg_${Date.now()}`,\n        type: responseType,\n        content: getSimulatedResponse(inputValue, responseType),\n        timestamp: Date.now(),\n        sender: 'AI GM'\n      };\n      \n      setMessages(prev => [...prev, aiResponse]);\n      \n      // Log as game event if it's in-character narration\n      if (responseType === 'ic-ai') {\n        addGameEvent({\n          type: 'game_master_narration',\n          description: aiResponse.content.substring(0, 100) + (aiResponse.content.length > 100 ? '...' : '')\n        });\n      }\n    }, 1000);\n  };\n  \n  // Simple simulated response generator\n  const getSimulatedResponse = (input: string, responseType: MessageType): string => {\n    if (responseType === 'admin-ai') {\n      return \"I understand you're making a system request. Let me handle that for you.\";\n    } else if (responseType === 'ooc-ai') {\n      return \"That's a good meta-game question. As the Game Master, I'd suggest considering the current narrative context.\";\n    } else {\n      // ic-ai type - narrative response\n      return \"The ancient forest grows silent as you speak. Distant creatures pause their activities, as if listening to your words. What will you do next?\";\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-messages\">\n        {messages.map((message) => (\n          <div key={message.id} className={`message ${message.type}-message fade-in`}>\n            <div className=\"message-header\">\n              <span className=\"sender\">{message.sender}</span>\n              <span className=\"timestamp\">\n                {new Date(message.timestamp).toLocaleTimeString()}\n              </span>\n            </div>\n            <div className=\"message-content\">{message.content}</div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      <div className=\"chat-input-container\">\n        <div className=\"message-type-selector\">\n          <button \n            className={`type-button ${messageType === 'ic-player' ? 'active' : ''}`}\n            onClick={() => setMessageType('ic-player')}\n            title=\"In-Character: What your character says or does\"\n          >\n            IC\n          </button>\n          <button \n            className={`type-button ${messageType === 'ooc-player' ? 'active' : ''}`}\n            onClick={() => setMessageType('ooc-player')}\n            title=\"Out-of-Character: Meta-game discussions\"\n          >\n            OOC\n          </button>\n          <button \n            className={`type-button ${messageType === 'admin-user' ? 'active' : ''}`}\n            onClick={() => setMessageType('admin-user')}\n            title=\"Admin: System commands and settings\"\n          >\n            Admin\n          </button>\n        </div>\n        \n        <form onSubmit={handleSendMessage} className=\"chat-input-form\">\n          <textarea\n            className=\"chat-input\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            placeholder={messageType === 'ic-player' \n              ? \"Describe what your character says or does...\" \n              : messageType === 'ooc-player'\n                ? \"Ask a question about the game or rules...\"\n                : \"Enter a system command...\"}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSendMessage(e);\n              }\n            }}\n            rows={2}\n          />\n          <button type=\"submit\" className=\"send-button\">\n            Send\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}