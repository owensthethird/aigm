{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadow\\\\Documents\\\\Cursor\\\\aiGM\\\\ui\\\\src\\\\components\\\\ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useGameState } from '../contexts/GameStateContext';\nimport { useWebSocket } from '../contexts/WebSocketContext';\nimport Message from './Message';\nimport Button from './Button';\nimport Input from './Input';\nimport ProviderStatus from './ProviderStatus';\nimport ChatService from '../services/ChatService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Using types from '../types/chat'\n\nconst ChatInterface = () => {\n  _s();\n  const {\n    gameState,\n    addGameEvent\n  } = useGameState();\n  const {\n    status: wsStatus,\n    sendMessage,\n    messages: wsMessages,\n    providerStatus\n  } = useWebSocket();\n\n  // Combine welcome message with websocket messages\n  const [messages, setMessages] = useState([{\n    id: 'welcome',\n    type: 'admin-ai',\n    content: `Welcome to \"${gameState.sessionName}\"! I'll be your AI Game Master today. What would you like to do?`,\n    timestamp: Date.now(),\n    sender: 'AI GM'\n  }]);\n  const [inputValue, setInputValue] = useState('');\n  const [messageType, setMessageType] = useState('ooc-player');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatService = ChatService.getInstance();\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Listen for websocket messages\n  useEffect(() => {\n    // Only add messages of type \"message\"\n    const newMessages = wsMessages.filter(msg => msg.type === 'message').map(msg => ({\n      ...msg.payload,\n      id: msg.payload.id || `msg_${msg.timestamp}`,\n      timestamp: msg.timestamp\n    }));\n    if (newMessages.length > 0) {\n      // Add new messages and stop loading state\n      setMessages(prev => [...prev, ...newMessages]);\n      setIsLoading(false);\n\n      // Log in-character messages to game events\n      newMessages.forEach(msg => {\n        if (msg.type === 'ic-ai') {\n          addGameEvent({\n            type: 'game_master_narration',\n            description: msg.content.substring(0, 100) + (msg.content.length > 100 ? '...' : '')\n          });\n        }\n      });\n    }\n  }, [wsMessages, addGameEvent]);\n\n  // Group messages by date for better visual organization\n  const groupedMessages = messages.reduce((groups, message) => {\n    const date = new Date(message.timestamp).toLocaleDateString();\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n    groups[date].push(message);\n    return groups;\n  }, {});\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!inputValue.trim() || isLoading) return;\n\n    // Get the right response type based on current message type\n    let responseType = 'ooc-ai';\n    if (messageType === 'ic-player') {\n      responseType = 'ic-ai';\n    } else if (messageType === 'ooc-player') {\n      responseType = 'ooc-ai';\n    } else if (messageType === 'admin-user') {\n      responseType = 'admin-ai';\n    }\n\n    // Create player message\n    const newPlayerMessage = {\n      id: `msg_${Date.now()}`,\n      type: messageType,\n      content: inputValue,\n      timestamp: Date.now(),\n      sender: 'You'\n    };\n\n    // Add player message to state\n    setMessages(prev => [...prev, newPlayerMessage]);\n\n    // Clear input\n    setInputValue('');\n\n    // Log as game event if it's in-character\n    if (messageType === 'ic-player') {\n      addGameEvent({\n        type: 'player_action',\n        description: inputValue\n      });\n    }\n    try {\n      // Set loading state to show typing indicator\n      setIsLoading(true);\n\n      // Add a temporary loading message to show typing indicator\n      const loadingMessage = {\n        id: `loading_${Date.now()}`,\n        type: responseType,\n        content: '',\n        timestamp: Date.now(),\n        sender: 'AI GM',\n        isLoading: true\n      };\n      setMessages(prev => [...prev, loadingMessage]);\n\n      // Send message to API\n      await chatService.sendMessage(inputValue, messageType);\n\n      // Note: No need to manually add response, WebSocket will deliver it\n      // The useEffect hook handling wsMessages will add the real message\n      // and the loading message will be replaced\n    } catch (error) {\n      // Handle error - show error message\n      console.error('Failed to send message:', error);\n\n      // Remove loading message\n      setIsLoading(false);\n      setMessages(prev => prev.filter(msg => !msg.isLoading));\n\n      // Add error message\n      const errorMessage = {\n        id: `error_${Date.now()}`,\n        type: 'admin-ai',\n        content: 'Failed to send message. Please check your connection and try again.',\n        timestamp: Date.now(),\n        sender: 'System'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-status\",\n      children: /*#__PURE__*/_jsxDEV(ProviderStatus, {\n        providers: providerStatus.map(update => ({\n          id: update.providerId,\n          name: update.providerId,\n          status: update.status,\n          isActive: true,\n          type: 'unknown'\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [Object.entries(groupedMessages).map(([date, dateMessages]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-separator\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), dateMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            type: message.type,\n            content: message.content,\n            timestamp: message.timestamp,\n            sender: message.sender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this))]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-type-selector\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: messageType === 'ic-player' ? 'primary' : 'secondary',\n          size: \"small\",\n          onClick: () => setMessageType('ic-player'),\n          title: \"In-Character: What your character says or does\",\n          className: `type-button ${messageType === 'ic-player' ? 'active' : ''}`,\n          text: \"IC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: messageType === 'ooc-player' ? 'primary' : 'secondary',\n          size: \"small\",\n          onClick: () => setMessageType('ooc-player'),\n          title: \"Out-of-Character: Meta-game discussions\",\n          className: `type-button ${messageType === 'ooc-player' ? 'active' : ''}`,\n          text: \"OOC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: messageType === 'admin-user' ? 'primary' : 'secondary',\n          size: \"small\",\n          onClick: () => setMessageType('admin-user'),\n          title: \"Admin: System commands and settings\",\n          className: `type-button ${messageType === 'admin-user' ? 'active' : ''}`,\n          text: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        className: \"chat-input-form\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          placeholder: \"Type your message...\",\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          className: \"send-button\",\n          text: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"FYbioTGsJDgL3pGTwM78I9xSVCA=\", false, function () {\n  return [useGameState, useWebSocket];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useGameState","useWebSocket","Message","Button","Input","ProviderStatus","ChatService","jsxDEV","_jsxDEV","ChatInterface","_s","gameState","addGameEvent","status","wsStatus","sendMessage","messages","wsMessages","providerStatus","setMessages","id","type","content","sessionName","timestamp","Date","now","sender","inputValue","setInputValue","messageType","setMessageType","isLoading","setIsLoading","messagesEndRef","chatService","getInstance","_messagesEndRef$curre","current","scrollIntoView","behavior","newMessages","filter","msg","map","payload","length","prev","forEach","description","substring","groupedMessages","reduce","groups","message","date","toLocaleDateString","push","handleSendMessage","e","preventDefault","trim","responseType","newPlayerMessage","loadingMessage","error","console","errorMessage","className","children","providers","update","providerId","name","isActive","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","dateMessages","ref","variant","size","onClick","title","text","onSubmit","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Shadow/Documents/Cursor/aiGM/ui/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useGameState } from '../contexts/GameStateContext';\nimport { useWebSocket } from '../contexts/WebSocketContext';\nimport Message from './Message';\nimport Button from './Button';\nimport Input from './Input';\nimport ProviderStatus from './ProviderStatus';\nimport ChatService from '../services/ChatService';\nimport { ChatMessage, MessageType, DEFAULT_CHAT_CONTEXTS } from '../types/chat';\n\n// Using types from '../types/chat'\n\nconst ChatInterface: React.FC = () => {\n  const { gameState, addGameEvent } = useGameState();\n  const { status: wsStatus, sendMessage, messages: wsMessages, providerStatus } = useWebSocket();\n  \n  // Combine welcome message with websocket messages\n  const [messages, setMessages] = useState<ChatMessage[]>([\n    {\n      id: 'welcome',\n      type: 'admin-ai',\n      content: `Welcome to \"${gameState.sessionName}\"! I'll be your AI Game Master today. What would you like to do?`,\n      timestamp: Date.now(),\n      sender: 'AI GM'\n    }\n  ]);\n  const [inputValue, setInputValue] = useState('');\n  const [messageType, setMessageType] = useState<MessageType>('ooc-player');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const chatService = ChatService.getInstance();\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n  \n  // Listen for websocket messages\n  useEffect(() => {\n    // Only add messages of type \"message\"\n    const newMessages = wsMessages\n      .filter(msg => msg.type === 'message')\n      .map(msg => ({\n        ...msg.payload,\n        id: msg.payload.id || `msg_${msg.timestamp}`,\n        timestamp: msg.timestamp\n      }));\n    \n    if (newMessages.length > 0) {\n      // Add new messages and stop loading state\n      setMessages(prev => [...prev, ...newMessages]);\n      setIsLoading(false);\n      \n      // Log in-character messages to game events\n      newMessages.forEach(msg => {\n        if (msg.type === 'ic-ai') {\n          addGameEvent({\n            type: 'game_master_narration',\n            description: msg.content.substring(0, 100) + (msg.content.length > 100 ? '...' : '')\n          });\n        }\n      });\n    }\n  }, [wsMessages, addGameEvent]);\n  \n  // Group messages by date for better visual organization\n  const groupedMessages = messages.reduce<Record<string, ChatMessage[]>>((groups, message) => {\n    const date = new Date(message.timestamp).toLocaleDateString();\n    if (!groups[date]) {\n      groups[date] = [];\n    }\n    groups[date].push(message);\n    return groups;\n  }, {});\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!inputValue.trim() || isLoading) return;\n    \n    // Get the right response type based on current message type\n    let responseType: MessageType = 'ooc-ai';\n    if (messageType === 'ic-player') {\n      responseType = 'ic-ai';\n    } else if (messageType === 'ooc-player') {\n      responseType = 'ooc-ai';\n    } else if (messageType === 'admin-user') {\n      responseType = 'admin-ai';\n    }\n    \n    // Create player message\n    const newPlayerMessage: ChatMessage = {\n      id: `msg_${Date.now()}`,\n      type: messageType,\n      content: inputValue,\n      timestamp: Date.now(),\n      sender: 'You'\n    };\n    \n    // Add player message to state\n    setMessages(prev => [...prev, newPlayerMessage]);\n    \n    // Clear input\n    setInputValue('');\n    \n    // Log as game event if it's in-character\n    if (messageType === 'ic-player') {\n      addGameEvent({\n        type: 'player_action',\n        description: inputValue\n      });\n    }\n    \n    try {\n      // Set loading state to show typing indicator\n      setIsLoading(true);\n      \n      // Add a temporary loading message to show typing indicator\n      const loadingMessage: ChatMessage = {\n        id: `loading_${Date.now()}`,\n        type: responseType,\n        content: '',\n        timestamp: Date.now(),\n        sender: 'AI GM',\n        isLoading: true\n      };\n      \n      setMessages(prev => [...prev, loadingMessage]);\n      \n      // Send message to API\n      await chatService.sendMessage(inputValue, messageType);\n      \n      // Note: No need to manually add response, WebSocket will deliver it\n      // The useEffect hook handling wsMessages will add the real message\n      // and the loading message will be replaced\n    } catch (error) {\n      // Handle error - show error message\n      console.error('Failed to send message:', error);\n      \n      // Remove loading message\n      setIsLoading(false);\n      setMessages(prev => \n        prev.filter(msg => !msg.isLoading)\n      );\n      \n      // Add error message\n      const errorMessage: ChatMessage = {\n        id: `error_${Date.now()}`,\n        type: 'admin-ai',\n        content: 'Failed to send message. Please check your connection and try again.',\n        timestamp: Date.now(),\n        sender: 'System'\n      };\n      \n      setMessages(prev => [...prev, errorMessage]);\n    }\n  };\n  \n\n\n  return (\n    <div className=\"chat-container\">\n      {/* Connection Status */}\n      <div className=\"connection-status\">\n        <ProviderStatus \n          providers={providerStatus.map(update => ({\n            id: update.providerId,\n            name: update.providerId,\n            status: update.status,\n            isActive: true,\n            type: 'unknown'\n          }))}\n        />\n      </div>\n      \n      <div className=\"chat-messages\">\n        {Object.entries(groupedMessages).map(([date, dateMessages]) => (\n          <div key={date} className=\"message-group\">\n            <div className=\"date-separator\">\n              <span>{date}</span>\n            </div>\n            {dateMessages.map((message) => (\n              <div key={message.id} className=\"message-wrapper\">\n                <Message\n                  type={message.type}\n                  content={message.content}\n                  timestamp={message.timestamp}\n                  sender={message.sender}\n                />\n              </div>\n            ))}\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      <div className=\"chat-input-container\">\n        <div className=\"message-type-selector\">\n          <Button \n            variant={messageType === 'ic-player' ? 'primary' : 'secondary'}\n            size=\"small\"\n            onClick={() => setMessageType('ic-player')}\n            title=\"In-Character: What your character says or does\"\n            className={`type-button ${messageType === 'ic-player' ? 'active' : ''}`}\n            text=\"IC\"\n          />\n          <Button \n            variant={messageType === 'ooc-player' ? 'primary' : 'secondary'}\n            size=\"small\"\n            onClick={() => setMessageType('ooc-player')}\n            title=\"Out-of-Character: Meta-game discussions\"\n            className={`type-button ${messageType === 'ooc-player' ? 'active' : ''}`}\n            text=\"OOC\"\n          />\n          <Button \n            variant={messageType === 'admin-user' ? 'primary' : 'secondary'}\n            size=\"small\"\n            onClick={() => setMessageType('admin-user')}\n            title=\"Admin: System commands and settings\"\n            className={`type-button ${messageType === 'admin-user' ? 'active' : ''}`}\n            text=\"Admin\"\n          />\n        </div>\n        \n        <form onSubmit={handleSendMessage} className=\"chat-input-form\">\n          <Input\n            type=\"text\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            placeholder=\"Type your message...\"\n            className=\"chat-input\"\n          />\n          <Button \n            type=\"submit\" \n            variant=\"primary\"\n            className=\"send-button\"\n            text=\"Send\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}