{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadow\\\\Documents\\\\Cursor\\\\aiGM\\\\ui\\\\src\\\\components\\\\Message.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Message component for displaying chat messages with appropriate styling based on type\n */\nconst Message = ({\n  id,\n  type,\n  content,\n  timestamp,\n  sender\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message ${type}-message fade-in`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sender\",\n        children: sender\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"timestamp\",\n        children: new Date(timestamp).toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Message","id","type","content","timestamp","sender","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/Shadow/Documents/Cursor/aiGM/ui/src/components/Message.tsx"],"sourcesContent":["import React from 'react';\nimport { MessageType } from './ChatInterface';\n\ninterface MessageProps {\n  type: MessageType;\n  content: string;\n  timestamp: number;\n  sender: string;\n}\n\n/**\n * Message component for displaying chat messages with appropriate styling based on type\n */\nconst Message: React.FC<MessageProps> = ({ id, type, content, timestamp, sender }) => {\n  return (\n    <div key={id} className={`message ${type}-message fade-in`}>\n      <div className=\"message-header\">\n        <span className=\"sender\">{sender}</span>\n        <span className=\"timestamp\">\n          {new Date(timestamp).toLocaleTimeString()}\n        </span>\n      </div>\n      <div className=\"message-content\">{content}</div>\n    </div>\n  );\n};\n\nexport default Message;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B;AACA;AACA;AACA,MAAMC,OAA+B,GAAGA,CAAC;EAAEC,EAAE;EAAEC,IAAI;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAO,CAAC,KAAK;EACpF,oBACEN,OAAA;IAAcO,SAAS,EAAE,WAAWJ,IAAI,kBAAmB;IAAAK,QAAA,gBACzDR,OAAA;MAAKO,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BR,OAAA;QAAMO,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAEF;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxCZ,OAAA;QAAMO,SAAS,EAAC,WAAW;QAAAC,QAAA,EACxB,IAAIK,IAAI,CAACR,SAAS,CAAC,CAACS,kBAAkB,CAAC;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNZ,OAAA;MAAKO,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAEJ;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,GAPxCV,EAAE;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAQP,CAAC;AAEV,CAAC;AAACG,EAAA,GAZId,OAA+B;AAcrC,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}